[{"/Users/batuhan/Desktop/React_task/src/index.js":"1","/Users/batuhan/Desktop/React_task/src/reportWebVitals.js":"2","/Users/batuhan/Desktop/React_task/src/components/ProductList.js":"3","/Users/batuhan/Desktop/React_task/src/components/Product.js":"4","/Users/batuhan/Desktop/React_task/src/components/AddProduct.js":"5","/Users/batuhan/Desktop/React_task/src/components/actions/productActions.js":"6","/Users/batuhan/Desktop/React_task/src/components/actions/types.js":"7","/Users/batuhan/Desktop/React_task/src/components/api/productApi.js":"8","/Users/batuhan/Desktop/React_task/src/components/reducer/store.js":"9","/Users/batuhan/Desktop/React_task/src/components/reducer/index.js":"10","/Users/batuhan/Desktop/React_task/src/components/reducer/productReducer.js":"11","/Users/batuhan/Desktop/React_task/src/components/ProductListItem.js":"12","/Users/batuhan/Desktop/React_task/src/components/EditProduct.js":"13","/Users/batuhan/Desktop/React_task/src/components/Order.js":"14"},{"size":712,"mtime":1673122360571,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1673084125635,"results":"17","hashOfConfig":"16"},{"size":1570,"mtime":1673357110853,"results":"18","hashOfConfig":"16"},{"size":2777,"mtime":1673422814820,"results":"19","hashOfConfig":"16"},{"size":3293,"mtime":1673422096763,"results":"20","hashOfConfig":"16"},{"size":1314,"mtime":1673421649297,"results":"21","hashOfConfig":"16"},{"size":301,"mtime":1673380551944,"results":"22","hashOfConfig":"16"},{"size":1221,"mtime":1673421597101,"results":"23","hashOfConfig":"16"},{"size":358,"mtime":1673120184599,"results":"24","hashOfConfig":"16"},{"size":181,"mtime":1673139281461,"results":"25","hashOfConfig":"16"},{"size":1625,"mtime":1673420999111,"results":"26","hashOfConfig":"16"},{"size":2013,"mtime":1673345268159,"results":"27","hashOfConfig":"16"},{"size":3418,"mtime":1673311269898,"results":"28","hashOfConfig":"16"},{"size":4200,"mtime":1673421225043,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"11u8gsx",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/batuhan/Desktop/React_task/src/index.js",[],[],[],"/Users/batuhan/Desktop/React_task/src/reportWebVitals.js",[],[],"/Users/batuhan/Desktop/React_task/src/components/ProductList.js",["76"],[],"/Users/batuhan/Desktop/React_task/src/components/Product.js",["77"],[],"import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AddProduct from './AddProduct';\nimport ProductList from './ProductList';\nimport Order from './Order';\nimport { fetchProducts, fetchSearchProducts } from './actions/productActions';\n\nfunction Product(props) {\n\n    const {fetchProducts, products, fetchSearchProducts} = props;\n\n    const [open, setOpen] = useState(false);\n    const [order, setOrder] = useState(false);\n    const [search, setSearch] = useState(\"\");\n\n    const handleSearch = () => {\n        fetchSearchProducts(search)\n    }\n\n    const checkPressedEnter = (key) => {\n        if (key === \"Enter\") {\n            fetchSearchProducts(search)\n        }\n      };\n\n    useEffect(() => {\n        fetchProducts()\n      }, [])\n\n    const orderPopUpClose = () => {\n        setOrder(false);\n    };\n    \n    const handleClose = () => {\n    setOpen(false);\n    };\n\n    return(\n    <div>\n        <Order\n            open={order}\n            orderPopUpClose={orderPopUpClose}\n            products={products}\n            fetchProducts={fetchProducts}\n        />\n        <AddProduct\n            open={open}\n            handleClose={handleClose}\n        />\n\n        <Button variant=\"contained\" color=\"primary\" style={{margin:\"5px\"}} onClick={() => setOrder(true)}>\n            USE PRODUCT\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" style={{margin:\"5px\"}} onClick={() => setOpen(true)}>\n            ADD PRODUCT\n        </Button>\n             <TextField \n             style={{marginTop:\"5px\"}} \n             id=\"outlined-basic\" \n             label=\"Search\" \n             size='small'\n             value={search}\n             onChange={(e) => setSearch(e.target.value)}\n             onKeyPress={(e) => checkPressedEnter(e.key)}\n             variant=\"outlined\" \n             InputProps={{\n                 endAdornment: (\n                     <>\n                     <IconButton size=\"small\" onClick={() => handleSearch()}>\n                         <SearchIcon/>\n                     </IconButton>\n                     </>\n                 ),\n             }}\n             />\n        <ProductList\n            products={products}\n        />\n    </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    products: state.products\n  });\n  \n  const mapDispatchToProps = (dispatch) => ({\n    fetchProducts: () => {\n      dispatch(fetchProducts());\n    },\n    fetchSearchProducts: (data) => {\n        dispatch(fetchSearchProducts(data));\n      },\n  });\n\nexport default  connect(mapStateToProps,mapDispatchToProps) (Product)","/Users/batuhan/Desktop/React_task/src/components/AddProduct.js",["78"],[],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport DialogActions from '@mui/material/DialogActions';\nimport TextField from '@mui/material/TextField';\nimport DialogContent from '@mui/material/DialogContent';\nimport { addProduct } from './actions/productActions';\nimport { postProduct } from './api/productApi';\n\nfunction AddProduct(props) {\n\n    const {open, handleClose, addProduct} = props\n\n    const [productName, setProductName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [price, setPrice] = useState(0)\n    const [amount, setAmount] = useState(0)\n\n    const handleCreateProduct = async () => {\n      const data = {\n        productName : productName,\n        description : description,\n        price: price,\n        amount: amount,\n      }\n      await postProduct(data\n        ).then((res) => {\n        addProduct(res.data)\n      }).finally(() => {\n        handleClose(false)\n      })\n    }\n\n    return(\n    <div>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          fullWidth\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            <div style={{ textAlign : \"center\" }}>\n              Add Stock\n            </div>\n          </DialogTitle>\n          <DialogContent>\n            <div style={{display:\"grid\"}}>\n          <TextField\n            id=\"product\"\n            value={productName}\n            onChange={(e) => setProductName(e.target.value)}\n            type=\"text\"\n            margin=\"normal\"\n            label=\"Product Name\"\n            variant=\"outlined\"\n            size='small'\n          />\n          <TextField\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            autoFocus\n            margin=\"normal\"\n            id=\"description\"\n            label=\"Description\"\n            type=\"text\"\n            variant=\"outlined\"\n            size='small'\n          />\n          <TextField\n            value={amount}\n            onChange={(e) => setAmount(parseInt(e.target.value))}\n            autoFocus\n            margin=\"normal\"\n            id=\"amount\"\n            label=\"Amount\"\n            type=\"number\"\n            variant=\"outlined\"\n            size='small'\n          />\n          <TextField\n            value={price}\n            onChange={(e) => setPrice(parseInt(e.target.value))}\n            autoFocus\n            margin=\"normal\"\n            id=\"price\"\n            label=\"Price\"\n            type=\"number\"\n            variant=\"outlined\"\n            size='small'\n          />\n          </div>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={() =>handleCreateProduct()}>ADD</Button>\n          </DialogActions>\n      </Dialog>\n    </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addProduct: (data) => {\n    dispatch(addProduct(data));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AddProduct)",[],"/Users/batuhan/Desktop/React_task/src/components/actions/productActions.js",["79","80"],[],"/Users/batuhan/Desktop/React_task/src/components/actions/types.js",[],[],"/Users/batuhan/Desktop/React_task/src/components/api/productApi.js",[],[],"/Users/batuhan/Desktop/React_task/src/components/reducer/store.js",[],[],"/Users/batuhan/Desktop/React_task/src/components/reducer/index.js",[],[],"/Users/batuhan/Desktop/React_task/src/components/reducer/productReducer.js",["81","82","83","84","85"],[],"/Users/batuhan/Desktop/React_task/src/components/ProductListItem.js",[],[],"/Users/batuhan/Desktop/React_task/src/components/EditProduct.js",[],[],"/Users/batuhan/Desktop/React_task/src/components/Order.js",["86"],[],{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":32,"column":10,"nodeType":"93","endLine":32,"endColumn":12,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"95","line":1,"column":38,"nodeType":"89","messageId":"90","endLine":1,"endColumn":57},{"ruleId":"87","severity":1,"message":"96","line":38,"column":11,"nodeType":"89","messageId":"90","endLine":38,"endColumn":15},{"ruleId":"97","severity":1,"message":"98","line":15,"column":45,"nodeType":"99","messageId":"100","endLine":15,"endColumn":47},{"ruleId":"101","severity":1,"message":"102","line":16,"column":28,"nodeType":"103","messageId":"104","endLine":16,"endColumn":30},{"ruleId":"105","severity":1,"message":"106","line":25,"column":21,"nodeType":"89","messageId":"107","endLine":25,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":26,"column":49,"nodeType":"99","messageId":"100","endLine":26,"endColumn":51},{"ruleId":"101","severity":1,"message":"102","line":27,"column":32,"nodeType":"103","messageId":"104","endLine":27,"endColumn":34},{"ruleId":"87","severity":1,"message":"108","line":12,"column":18,"nodeType":"89","messageId":"90","endLine":12,"endColumn":35},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'updateProductAmount' is defined but never used.","'resp' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'temp' is already defined.","redeclared","'SelectChangeEvent' is defined but never used.",{"desc":"110","fix":"111"},"Update the dependencies array to be: [fetchProducts]",{"range":"112","text":"113"},[971,973],"[fetchProducts]"]