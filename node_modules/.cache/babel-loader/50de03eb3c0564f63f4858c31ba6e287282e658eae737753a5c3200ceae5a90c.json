{"ast":null,"code":"var _jsxFileName = \"/Users/batuhan/Desktop/React_task/src/components/Order.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport DialogActions from '@mui/material/DialogActions';\nimport TextField from '@mui/material/TextField';\nimport DialogContent from '@mui/material/DialogContent';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { updateProductAmount } from './api/productApi';\nimport { updateProductStock } from './actions/productActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Order(props) {\n  _s();\n  const {\n    products,\n    open,\n    updateProductStock,\n    orderPopUpClose\n  } = props;\n  const [selectedProduct, setSelectedProduct] = useState({});\n\n  /*  const [productName, setProductName] = useState(\"\") */\n  const [amount, setAmount] = useState(0);\n  const handleSave = async () => {\n    if (amount > selectedProduct.amount) {\n      console.log(\"hata\");\n    } else {\n      await updateProductAmount(selectedProduct.id, amount).then(() => {\n        updateProductStock(selectedProduct.id, amount);\n        console.log(updateProductStock(selectedProduct.id, amount), selectedProduct.id, amount);\n      }).finally(() => {\n        orderPopUpClose(false);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: orderPopUpClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Use Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            sx: {\n              m: 1,\n              minWidth: 120\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-standard-label\",\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-standard-label\",\n              id: \"demo-simple-select-standard\",\n              value: selectedProduct.productName || \"\",\n              label: \"Age\",\n              children: products.products && products.products.map(product => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: product.productName,\n                  onClick: () => setSelectedProduct(product),\n                  children: product.productName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 31\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            value: amount,\n            onChange: e => setAmount(parseInt(e.target.value)),\n            autoFocus: true,\n            margin: \"normal\",\n            id: \"amount\",\n            label: \"Amount\",\n            type: \"number\",\n            variant: \"outlined\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: orderPopUpClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleSave(),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Order, \"C8mUPd6Ko9Kncc55WNDeS8TF7x0=\");\n_c = Order;\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => ({\n  updateProductStock: (id, data) => {\n    dispatch(updateProductStock(id, data));\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useState","connect","Dialog","DialogTitle","Button","DialogActions","TextField","DialogContent","InputLabel","MenuItem","FormControl","Select","SelectChangeEvent","updateProductAmount","updateProductStock","Order","props","products","open","orderPopUpClose","selectedProduct","setSelectedProduct","amount","setAmount","handleSave","console","log","id","then","finally","textAlign","display","m","minWidth","productName","map","product","e","parseInt","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"sources":["/Users/batuhan/Desktop/React_task/src/components/Order.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport DialogActions from '@mui/material/DialogActions';\nimport TextField from '@mui/material/TextField';\nimport DialogContent from '@mui/material/DialogContent';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { updateProductAmount } from './api/productApi';\nimport { updateProductStock } from './actions/productActions';\n\nfunction Order(props) {\n\n    const {products, open, updateProductStock, orderPopUpClose} = props\n\n    const [selectedProduct, setSelectedProduct] = useState({})\n\n   /*  const [productName, setProductName] = useState(\"\") */\n    const [amount, setAmount] = useState(0)\n\n    const handleSave = async () => {\n        if (amount > selectedProduct.amount) {\n            console.log(\"hata\")\n        }\n        else{\n           await updateProductAmount(selectedProduct.id,amount)\n            .then(() => {\n                updateProductStock(selectedProduct.id,amount)\n                console.log(updateProductStock(selectedProduct.id,amount),selectedProduct.id,amount)\n            }).finally(() => {\n                orderPopUpClose(false)\n            })\n        }\n    }\n\n\n    return(\n    <div>\n        <Dialog\n          open={open}\n          onClose={orderPopUpClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          fullWidth\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            <div style={{ textAlign : \"center\" }}>\n              Use Product\n            </div>\n          </DialogTitle>\n          <DialogContent>\n            <div style={{display:\"grid\"}}>\n                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n                    <InputLabel id=\"demo-simple-select-standard-label\">Age</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-standard-label\"\n                      id=\"demo-simple-select-standard\"\n                      value={selectedProduct.productName || \"\"}\n                      label=\"Age\"\n                    >\n                      {products.products && products.products.map((product) => {\n                       return <MenuItem value={product.productName} onClick={() => setSelectedProduct(product)}>{product.productName}</MenuItem>\n                    })}\n                      {/* <MenuItem value={20}>Twenty</MenuItem>\n                      <MenuItem value={30}>Thirty</MenuItem> */}\n                    </Select>\n                  </FormControl>\n          <TextField\n            value={amount}\n            onChange={(e) => setAmount(parseInt(e.target.value))}\n            autoFocus\n            margin=\"normal\"\n            id=\"amount\"\n            label=\"Amount\"\n            type=\"number\"\n            variant=\"outlined\"\n            size='small'\n          />\n          </div>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={orderPopUpClose}>Cancel</Button>\n            <Button onClick={() => handleSave()}>Save</Button>\n          </DialogActions>\n      </Dialog>\n    </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateProductStock: (id,data) => {\n        dispatch(updateProductStock(id,data));\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Order)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}